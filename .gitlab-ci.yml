# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.
default:
  tags:
    - docker

variables:
  CUSTOM_REGISTRY_IMAGE: fabieu/sureflap-api

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - echo $DOCKER_ACCESS_TOKEN | docker login --username fabieu --password-stdin
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=""
        echo "Running on default branch '$CI_DEFAULT_BRANCH': tag = 'latest'"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CUSTOM_REGISTRY_IMAGE${tag}" .
    - docker push "$CUSTOM_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists and the change is not related to the .gitlab-ci.yml
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
